{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator user name used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password used when provisioning virtual machines"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "OpenLogic",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "CentOS",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "7.2",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "zookeeperStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for the Storage Account where the Virtual Machine's of the Zookeeper disks will be placed"
      }
    },
    "nifiStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for the Storage Account where the Virtual Machine's of the Nifi disks will be placed"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "nifi-vnet",
      "metadata": {
        "description": "The arbitrary name of the virtual network provisioned for the cluster"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The network address space for the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned into by default"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "nifiSubnetName": {
      "type": "string",
      "defaultValue": "nifi",
      "metadata": {
        "description": "Subnet name for the virtual network that nifi nodes will be provisioned into"
      }
    },
    "nifiSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet that nifi nodes will be provisioned into"
      }
    },
    "zookeeperVersion": {
      "type": "string",
      "defaultValue": "3.4.9",
      "metadata": {
        "description": "The version of the Zookeeper package to be deployed on the cluster (or use 'stable' to pull in the latest and greatest)"
      }
    },
    "nifiVersion": {
      "type": "string",
      "defaultValue": "1.0.0",
      "metadata": {
        "description": "The version of the Nifi package to be deployed on the cluster (or use 'stable' to pull in the latest and greatest)"
      }
    },
    "nifiClusterName": {
      "type": "string",
      "metadata": {
        "description": "The arbitrary name of the Nifi cluster (maps to cluster's configuration file name)"
      }
    },
    "zookeeperNodeIPAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.4",
      "metadata": {
        "description": "The IP address prefix that will be used for constructing a static private IP address for each node in the cluster"
      }
    },
    "nifiNodeIPAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.1",
      "metadata": {
        "description": "The IP address prefix that will be used for constructing a static private IP address for each node in the cluster"
      }
    },
    "numberOfZookeeperInstances": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of Zookeeper nodes in the cluster"
      }
    },
    "numberOfNifiInstances": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Number of Nifi nodes in the cluster"
      }
    },
    "zookeeperVmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_V2",
      "metadata": {
        "description": "Virtual Machine size for the Zookeeper nodes in the cluster"
      }
    },
    "nifiVmSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_V2",
      "metadata": {
        "description": "Virtual Machine size for the Nifi nodes in the cluster"
      }
    },
    "jumpbox": {
      "type": "string",
      "defaultValue": "enabled",
      "allowedValues": [
        "enabled",
        "disabled"
      ],
      "metadata": {
        "description": "The flag allowing to enable or disable provisioning of the jumpbox VM that can be used to access the Nifi nodes"
      }
    }
  },
  "variables": {
    "platformFaultDomainCount": "2",
    "platformUpdateDomainCount": "5",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "nifiSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('nifiSubnetName'))]",
    "zookeeperComputerNamePrefix": "zookprnode",
    "nifiComputerNamePrefix": "nifinode",
    "scriptUrl": "https://raw.githubusercontent.com/SaschaDittmann/azure-resource-manager-templates/master/nifi-on-centos-vmss/",
    "templateUrl": "[variables('scriptUrl')]",
    "jumpboxTemplateName": "jumpbox-resources-",
    "uniqueStringArray": [
      "[concat(parameters('nifiStorageAccountName'), '0')]",
      "[concat(parameters('nifiStorageAccountName'), '1')]",
      "[concat(parameters('nifiStorageAccountName'), '2')]",
      "[concat(parameters('nifiStorageAccountName'), '3')]",
      "[concat(parameters('nifiStorageAccountName'), '4')]"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('zookeeperStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Storage Account (Zookeeper)"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('uniqueStringArray')[copyIndex()]]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "Storage Accounts (Nifi)"
      },
      "copy": {
        "name": "storageLoop",
        "count": "[length(variables('uniqueStringArray'))]"
      },
      "properties": {
        "accountType": "Premium_LRS"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "zookeeper-availabilityset",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Availability Set (Zookeeper)"
      },
      "properties": {
        "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('platformUpdateDomainCount')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Virtual Network"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          },
          {
            "name": "[parameters('nifiSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('nifiSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "jumpbox-resources",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('zookeeperStorageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateUrl'), variables('jumpboxTemplateName'), parameters('jumpbox'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "storageAccountName": {
            "value": "[parameters('zookeeperStorageAccountName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('zookeeper', copyindex(), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfZookeeperInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "Network Interfaces (Zookeeper)"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(parameters('zookeeperNodeIPAddressPrefix'), copyindex())]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('zookeeper', copyindex(), '-vm')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualZookeeperMachineLoop",
        "count": "[parameters('numberOfZookeeperInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('zookeeperStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'zookeeper', copyindex(), '-nic')]"
      ],
      "tags": {
        "displayName": "Virtual Machines (Zookeeper)"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'zookeeper-availabilityset')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('zookeeperVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('zookeeperComputerNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('https://',parameters('zookeeperStorageAccountName'),'.blob.core.windows.net/vhds/',variables('zookeeperComputerNamePrefix'), copyindex() ,'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('zookeeper', copyindex(), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat('zookeeper', copyindex(), '-vm/installzoo')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineZookeeperExtensionsLoop",
        "count": "[parameters('numberOfZookeeperInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', 'zookeeper', copyindex(), '-vm')]"
      ],
      "tags": {
        "displayName": "VM Extension (Zookeeper)"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[concat(variables('scriptUrl'), 'install-zookeeper-cluster.sh')]"
          ],
          "commandToExecute": "[concat('bash install-zookeeper-cluster.sh -z ',copyindex(),' -v ',parameters('zookeeperVersion'),' -c ',parameters('numberOfZookeeperInstances'),' -i ', parameters('zookeeperNodeIPAddressPrefix'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "nifi-scaleset",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "VM Scale Set (Nifi)"
      },
      "dependsOn": [
        "storageLoop",
        "virtualMachineZookeeperExtensionsLoop",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "[parameters('nifiVmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('numberOfNifiInstances')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', variables('uniqueStringArray')[0], '.blob.core.windows.net/vhds')]",
                "[concat('https://', variables('uniqueStringArray')[1], '.blob.core.windows.net/vhds')]",
                "[concat('https://', variables('uniqueStringArray')[2], '.blob.core.windows.net/vhds')]",
                "[concat('https://', variables('uniqueStringArray')[3], '.blob.core.windows.net/vhds')]",
                "[concat('https://', variables('uniqueStringArray')[4], '.blob.core.windows.net/vhds')]"
              ],
              "name": "[concat(variables('nifiComputerNamePrefix'),'-osdisk')]",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('nifiComputerNamePrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nifi-nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "nifi-ipconfig",
                      "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                          "id": "[variables('nifiSubnetRef')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "InstallNifi",
                "properties": {
                  "publisher": "Microsoft.OSTCExtensions",
                  "type": "CustomScriptForLinux",
                  "typeHandlerVersion": "1.2",
                  "settings": {
                    "fileUris": [
                      "[concat(variables('scriptUrl'), 'install-nifi-cluster.sh')]"
                    ],
                    "commandToExecute": "[concat('bash install-nifi-cluster.sh -v ',parameters('nifiVersion'),' -c ', parameters('numberOfZookeeperInstances'),' -z ', parameters('zookeeperNodeIPAddressPrefix'))]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}

